resources:
  - name: hld3-git-repo
    type: git
    source:
      uri: https://github.com/hld3/testing.git
      branch: master

  - name: alpine-python2-requests
    type: docker-image
    source: 
      repository: hld3/alpine-python2-requests
#       username: ((username))
#       password: ((password))

#   - name: my-python-image
#     type: docker-image
#     source: 
#       repository: hld3/test
#       username: ((username))
#       password: ((password))

jobs:

  - name: write-to-file
    public: true
    plan:
    - get: hld3-git-repo
    - get: alpine-python2-requests
    - task: create-file
      image: alpine-python2-requests
      config:
        platform: linux
        inputs:
          - name: hld3-git-repo
        outputs:
          - name: new-file

        run:
          path: sh
          args: 
            - -exc
            - |
              # Grab the metadata
              url=$(cat metadata/atc_external_url)
              team=$(cat metadata/build_team_name)
              pipeline=$(cat metadata/build_pipeline_name)
              job=$(cat metadata/build_job_name)
              build=$(cat metadata/build_name)

              # Generate the build URL to a file
              echo $url/teams/$team/pipelines/$pipeline/jobs/$job/builds/$build

#     - put: random-docker-repo
#       params: 
          
#         build: hld3-git-repo/ci


#  - name: read-from-file
#    public: true
#    plan:
#    - get: my-python-image
#      passed: [write-to-file]
#      trigger: true
#    - task: print-file-contents
#      image: my-python-image
#      config:
#        platform: linux
#        inputs:
#          - name: write-to-file

#        run:
#          path: ls
#          args: ["-l"]

